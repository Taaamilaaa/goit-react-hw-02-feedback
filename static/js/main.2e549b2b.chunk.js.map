{"version":3,"sources":["components/Statistics/statistic.module.css","components/FeedbackOptions/feedbackOptions.module.css","App/App.module.css","components/Section/section.module.css","components/Notification/notification.module.css","components/Statistics/Statistics.js","components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.js","App/App.js","index.js"],"names":["module","exports","Statistics","goodValue","neutralValue","badValue","total","positivePercentage","className","styles","statisticsList","statisticsItem","text","Section","title","children","section","FeedbackOptions","options","onLeaveFeedback","el","feedbackList","map","option","feedbackItem","button","onClick","protoTypes","PropTypes","arrayOf","string","array","Notification","massage","notification","App","state","good","neutral","bad","feedbackGoodChoice","setState","prevState","Number","feedbackNeutralChoice","feedbackBadChoice","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","container","feedback","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2e549b2b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statisticsList\":\"statistic_statisticsList__1873r\",\"statisticItem\":\"statistic_statisticItem__1d3SR\",\"text\":\"statistic_text__3Qwau\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedbackList\":\"feedbackOptions_feedbackList__3AMMr\",\"button\":\"feedbackOptions_button__3WDOk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1Fc-F\",\"feedback\":\"App_feedback__1TcSm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"section_section__3GYFf\",\"title\":\"section_title__3OWSR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"notification_notification__25PYj\"};","import PropTypes from 'prop-types'; // ES6\r\nimport styles from \"./statistic.module.css\"\r\n\r\nexport function Statistics({\r\n  goodValue,\r\n  neutralValue,\r\n  badValue,\r\n  total,\r\n  positivePercentage,\r\n}) {\r\n  return (\r\n    <>\r\n      <ul className={styles.statisticsList}>\r\n        <li className={styles.statisticsItem}>\r\n          <span className={styles.text}>Good: {goodValue}</span>\r\n        </li>\r\n        <li className={styles.statisticsItem}>\r\n          <span className={styles.text}>Neutral: {neutralValue}</span>\r\n        </li>\r\n        <li className={styles.statisticsItem}>\r\n          <span className={styles.text}>Bad: {badValue}</span>\r\n        </li>\r\n\r\n        <li className={styles.statisticsItem}>\r\n          <span className={styles.text}>Total: {total}</span>\r\n        </li>\r\n        <li className={styles.statisticsItem}>\r\n          <span className={styles.text}>Positive feedback: {positivePercentage}%</span>\r\n        </li>\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\ngoodValue : PropTypes.number,\r\n  neutralValue: PropTypes.number,\r\n  badValue: PropTypes.number,\r\n  total: PropTypes.number,\r\n  positivePercentage: PropTypes.number,\r\n}","import PropTypes from 'prop-types'; // \r\nimport styles from \"./section.module.css\"\r\n\r\nexport function Section({ title, children }) {\r\n    return (\r\n        <section className={styles.section}>\r\n            <h2 className={styles.title}>{title}</h2>\r\n            {children}\r\n        </section>\r\n    )\r\n}\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string,\r\n    children: PropTypes.element,\r\n}","import PropTypes from 'prop-types'; // ES6\r\n\r\n\r\nimport styles from './feedbackOptions.module.css'\r\n\r\nexport function FeedbackOptions({ options, onLeaveFeedback }) {\r\n    let el = -1;\r\n  return (\r\n    <ul className={styles.feedbackList}>\r\n          {options.map((option) => {            \r\n        return (\r\n          <li className={styles.feedbackItem} key={option}>\r\n            <button className={styles.button} onClick={onLeaveFeedback[el += 1]}>\r\n              {option}\r\n            </button>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\n\r\nFeedbackOptions.protoTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string),\r\n  onLeaveFeedback: PropTypes.array,\r\n}","import PropTypes from 'prop-types'; // ES6\r\nimport styles from \"./notification.module.css\"\r\n\r\nexport function Notification({ massage }) {\r\n    return (\r\n        <p className={styles.notification}>{ massage}</p>\r\n    )\r\n}\r\nNotification.propTypes = {\r\n    message: PropTypes.string,\r\n}","import styles from \"./App.module.css\";\nimport React from \"react\";\nimport { Statistics } from \"../components/Statistics/Statistics\";\nimport { Section } from \"../components/Section/Section\";\nimport { FeedbackOptions } from \"../components/FeedbackOptions/FeedbackOptions\";\nimport { Notification } from \"../components/Notification/Notification\";\n\nclass App extends React.Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  feedbackGoodChoice = () => {\n    this.setState((prevState) => {\n      const { good } = this.state;\n      return {\n        good: Number(`${Number(good) + 1}`),\n      };\n    });\n  };\n  feedbackNeutralChoice = () => {\n    this.setState((prevState) => {\n      const { neutral } = this.state;\n      return {\n        neutral: Number(`${Number(neutral) + 1}`),\n      };\n    });\n  };\n  feedbackBadChoice = () => {\n    this.setState((prevState) => {\n      const { bad } = this.state;\n      return {\n        bad: Number(`${Number(bad) + 1}`),\n      };\n    });\n  };\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    const total = Number(`${Number(good) + Number(neutral) + Number(bad)}`);\n    return total;\n  };\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n    const positivePercentage = Math.round(\n      (100 * Number(good)) / this.countTotalFeedback()\n    );\n    return positivePercentage;\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    return (\n      <section className={styles.container}>\n        <div className={styles.feedback}>\n          <Section title={\"Please leave your feedback\"}>\n            <FeedbackOptions\n              options={[\"Good\", \"Neutral\", \"Bad\"]}\n              onLeaveFeedback={[\n                this.feedbackGoodChoice,\n                this.feedbackNeutralChoice,\n                this.feedbackBadChoice,\n              ]}\n            />\n          </Section>\n          {this.countTotalFeedback() > 0 ? (\n            <Section title={\"Statistics\"}>\n              <Statistics\n                goodValue={good}\n                neutralValue={neutral}\n                badValue={bad}\n                total={this.countTotalFeedback()}\n                positivePercentage={this.countPositiveFeedbackPercentage()}\n              />\n            </Section>\n          ) : (\n            <Notification massage={\"No feedback given\"} />\n          )}\n        </div>\n      </section>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App.js';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}